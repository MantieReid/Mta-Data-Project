import pandas as pd

# Define file path
file_path = "Sample Data with Two Stations.csv"  # Change this to the actual file name
#file_path2 ="Sample Data with Two Stations.csv"

# Define chunk size to process data efficiently
chunk_size = 500000  # Adjust based on available memory

# Initialize an empty dataframe to store aggregated results
agg_results = []

# Process file in chunks
for chunk in pd.read_csv(file_path, usecols=['transit_timestamp', 'ridership', 'station_complex'], chunksize=chunk_size, parse_dates=['transit_timestamp']):
    # Extract hour and date
    chunk['hour'] = chunk['transit_timestamp'].dt.hour
    chunk['date'] = chunk['transit_timestamp'].dt.date
    
    # Aggregate ridership per hour per station
    agg_chunk = chunk.groupby(['date', 'hour', 'station_complex'])['ridership'].sum().reset_index()
    agg_results.append(agg_chunk)

# Concatenate all chunk results
daily_hourly_station_ridership = pd.concat(agg_results, ignore_index=True)

# Calculate the average ridership per hour
average_ridership_per_hour = daily_hourly_station_ridership.groupby('hour')['ridership'].mean().reset_index()

# Output results to CSV
output_file = "average_ridership_per_hour.csv"
average_ridership_per_hour.to_csv(output_file, index=False)

# Calculate the average ridership per hour per station
average_ridership_per_hour_station = daily_hourly_station_ridership.groupby(['hour', 'station_complex'])['ridership'].mean().reset_index()

# Output results to CSV
output_file_station = "average_ridership_per_hour_station.csv"
average_ridership_per_hour_station.to_csv(output_file_station, index=False)

# Display the results
print(average_ridership_per_hour_station)
print(f"Average ridership per hour per station saved to {output_file_station}")
print(average_ridership_per_hour)
print(f"Average ridership per hour saved to {output_file}")
